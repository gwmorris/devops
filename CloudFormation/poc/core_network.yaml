---
AWSTemplateFormatVersion: '2010-09-09'
Description: Starting (parent) template for building out the infrastructure
Parameters:
  EnvironmentName:
    Description: Name of this project
    Type: String
    Default: FDATest
  VPCCidr:
    Description: CIDR block for VPC. Ex. 10.0.0.0/16
    Type: String
    Default: 10.20.0.0/16
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  CidrBlockA:
    Description: CIDR block for Public Subnet A. Ex. 10.20.1.0/24
    Type: String
    Default: 10.20.1.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  CidrBlockB:
    Description: CIDR block for Public Subnet B. Ex. 10.20.2.0/24
    Type: String
    Default: 10.20.2.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  CidrBlockC:
    Description: CIDR block for Subnet C. Ex. 10.20.3.0/24
    Type: String
    Default: 10.20.3.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        -
          Key: "Name"
          Value: "FDA Test"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetA:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref CidrBlockA
      MapPublicIpOnLaunch: true
  SubnetB:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref CidrBlockB
      MapPublicIpOnLaunch: true
  SubnetC:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref CidrBlockC
      MapPublicIpOnLaunch: true
  RouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA
  SubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetB
  SubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetC

Outputs:
  SubnetA:
    Description: Subnet ID for Subnet A
    Value: !Ref SubnetA
    Export:
      Name: !Sub "${AWS::StackName}-SubnetA"
  SubnetB:
    Description: Subnet ID for Subnet B
    Value: !Ref SubnetB
    Export:
      Name: !Sub "${AWS::StackName}-SubnetB"
  SubnetC:
    Description: Subnet ID for Subnet C
    Value: !Ref SubnetC
    Export:
      Name: !Sub "${AWS::StackName}-SubnetC"
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPC"
